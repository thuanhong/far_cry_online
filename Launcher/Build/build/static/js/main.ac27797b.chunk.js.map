{"version":3,"sources":["Form/SignIn.js","Form/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","handleSubmit","event","preventDefault","props","form","validateFields","err","values","ipcRenderer","window","require","axios","post","user","then","result","brcypt","compare","pass","data","password","res","send","player_id","Modal","success","title","content","onOk","resetFields","error","catch","response","message","getFieldDecorator","this","className","style","textAlign","size","src","onSubmit","wrapperCol","xs","span","Item","rules","required","prefix","type","color","placeholder","Password","href","display","htmlType","React","Component","SignUp","console","log","genSalt","salt","hash","respond","view","validateToNextPassword","rule","value","callback","force","compareToFirstPassword","getFieldValue","validateUserName","get","validateEmail","labelCol","label","validator","hasFeedback","pattern","offset","sm","TabPane","Tabs","TabNavigation","changeTab","activeKey","setState","activeTab","state","onChange","tab","key","bind","Form","create","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac27797b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Avatar, Button, Form, Icon, Input, Modal} from \"antd\";\r\nimport axios from 'axios';\r\nimport brcypt from 'bcryptjs';\r\n\r\nclass SignIn extends React.Component {\r\n\r\n\thandleSubmit = event => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.form.validateFields(['user', 'pass'], (err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tlet { ipcRenderer } = window.require('electron');\r\n\t\t\t\taxios.post(\"https://dry-eyrie-39715.herokuapp.com/api/player/login\", {user:values.user})\r\n\t\t\t\t\t.then(result => {\r\n\t\t\t\t\t\tbrcypt.compare(values.pass, result.data.result.password, (err, res) => {\r\n\t\t\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\t\t\tipcRenderer.send('submitForm', [\"successful\", result.data.result.player_id]);\r\n\t\t\t\t\t\t\t\tModal.success({\r\n\t\t\t\t\t\t\t\t\ttitle: 'Successful',\r\n\t\t\t\t\t\t\t\t\tcontent: 'Please wait while run Far Cry',\r\n\t\t\t\t\t\t\t\t\tonOk: this.props.form.resetFields()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tModal.error({\r\n\t\t\t\t\t\t\t\t\ttitle: 'Error',\r\n\t\t\t\t\t\t\t\t\tcontent: \"Wrong password\",\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tModal.error({\r\n\t\t\t\t\t\t\ttitle: 'Error',\r\n\t\t\t\t\t\t\tcontent: error.response.data.message,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\tconst formItemLayout = {\r\n\t\t\twrapperCol: {\r\n\t\t\t\txs: {span: 24},\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn(\r\n\t\t\t<div className={\"form_signIn\"}>\r\n\t\t\t\t<Avatar style={{textAlign: 'center'}} \r\n\t\t\t\t\t\tsize={200} \r\n\t\t\t\t\t\tsrc=\"https://previews.123rf.com/images/nexusby/nexusby1703/nexusby170300243/74731429-crossed-powerful-pistols-two-handguns-on-white.jpg\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t<Form onSubmit={this.handleSubmit} {...formItemLayout}>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t{getFieldDecorator('user', {\r\n\t\t\t\t\t\t\trules:[\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\tmessage: \"Please input your username\\n\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})(\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tprefix={<Icon type=\"user\" style={{color:'rgba(0, 0, 0, .25)'}}/>}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username or  email\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t{getFieldDecorator('pass', {\r\n\t\t\t\t\t\t\trules: [{required: true, message: 'Please input your password'}]\r\n\t\t\t\t\t\t})(\r\n\t\t\t\t\t\t\t<Input.Password\r\n\t\t\t\t\t\t\t\tprefix={<Icon type='lock' style={{color:'rgba(0, 0, 0, .25)'}}/>}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t{/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n\t\t\t\t\t\t<a href='#' className=\"login\">Forgot Password ?</a>\r\n\t\t\t\t\t\t<Button style={{display: \"block\"}} type=\"primary\" htmlType='submit'>Log In</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SignIn;","import React from \"react\";\r\nimport {Button, Form, Input, Modal} from \"antd\";\r\nimport axios from 'axios';\r\nimport brcypt from 'bcryptjs';\r\n\r\nclass SignUp extends React.Component {\r\n\r\n\thandleSubmit = event => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.form.validateFields(['username', 'password', 'email'], (err, values) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tlet { ipcRenderer } = window.require('electron');\r\n\t\t\tbrcypt.genSalt(10, (error, salt) => {\r\n\t\t\t\tbrcypt.hash(values['password'], salt, (error, hash) => {\r\n\t\t\t\t\tvalues['password'] = hash;\r\n\t\t\t\t\taxios.post(\"https://dry-eyrie-39715.herokuapp.com/api/player\", values)\r\n\t\t\t\t\t\t.then(result => {\r\n\t\t\t\t\t\t\tipcRenderer.send('submitForm', [\"register\", result.data.respond.player_id]);\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t\tModal.success({\r\n\t\t\t\t\t\t\t\ttitle: 'Congratulation',\r\n\t\t\t\t\t\t\t\tcontent: `You have successfully registered, please access your mail to activate your account`,\r\n\t\t\t\t\t\t\t\tonOk: this.props.view()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(err => {\r\n\t\t\t\t\t\t\tModal.error({\r\n\t\t\t\t\t\t\t\ttitle: \"Something was wrong\",\r\n\t\t\t\t\t\t\t\tcontent: err\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tvalidateToNextPassword = (rule, value, callback) => {\r\n\t\tconst {form} = this.props;\r\n\t\tif (!value) {\r\n\t\t\tform.validateFields(['confirm'], {force:true})\r\n\t\t}\r\n\t\tcallback();\r\n\t};\r\n\r\n\tcompareToFirstPassword = (rule, value, callback) => {\r\n\t\tconst {form} = this.props;\r\n\t\tif (value && value !== form.getFieldValue('password')) {\r\n\t\t\tcallback('Two passwords must is same');\r\n\t\t} else {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tvalidateUserName = (rule, value, callback) => {\r\n\t\taxios.get(`https://dry-eyrie-39715.herokuapp.com/api/player/?name=${value}`)\r\n\t\t\t.then(result => {\r\n\t\t\t\tcallback();\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tcallback(\"This user name was be used\");\r\n\t\t\t});\r\n\t};\r\n\r\n\tvalidateEmail = (rule, value, callback) => {\r\n\t\taxios.get(`https://dry-eyrie-39715.herokuapp.com/api/player/?email=${value}`)\r\n\t\t\t.then(result => {\r\n\t\t\t\tcallback();\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tcallback(\"This email was be used\");\r\n\t\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\tconst formItemLayout = {\r\n\t\t\tlabelCol: {\r\n\t\t\t\txs: {span: 6},\r\n\t\t\t},\r\n\t\t\twrapperCol: {\r\n\t\t\t\txs: {span: 16},}\r\n\t\t};\r\n\t\tconst tailFormItemLayout = {\r\n\t\t\twrapperCol: {\r\n\t\t\t\txs: {\r\n\t\t\t\t\tspan: 24,\r\n\t\t\t\t\toffset: 0,\r\n\t\t\t\t},\r\n\t\t\t\tsm: {\r\n\t\t\t\t\tspan: 16,\r\n\t\t\t\t\toffset: 6,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn(\r\n\t\t\t<Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n\t\t\t\t<Form.Item label={\"Username\"}>\r\n\t\t\t\t\t{getFieldDecorator('username', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: \"Please input your username\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalidator: this.validateUserName,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input/>)}\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item label={\"Password\"} hasFeedback>\r\n\t\t\t\t\t{getFieldDecorator('password', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: \"Please input your password\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpattern:\"^(?=(.*[\\\\d]){1,}).{8,35}$\",\r\n\t\t\t\t\t\t\t\tmessage:\"Your password must be of at least 8 characters and contain 1 digit\\n\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpattern:\"^(?=.*?[A-Z])(?=(.*[a-z]){1,})\",\r\n\t\t\t\t\t\t\t\tmessage:\"Your password must be of at least 1 uppercase letter, 1 lowercase letter\\n\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpattern:\"^(?=(.*[\\\\W]){1,})(?!.*\\\\s)\",\r\n\t\t\t\t\t\t\t\tmessage:\"Your password must be of at least 1 non-word character but no whitespace\\n\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalidator: this.validateToNextPassword,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input.Password/>)}\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item label={\"Confirm Password\"} hasFeedback>\r\n\t\t\t\t\t{getFieldDecorator('confirm', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: 'Please confirm your password'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalidator: this.compareToFirstPassword,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input.Password/>)}\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item label={\"E-mail\"}>\r\n\t\t\t\t\t{getFieldDecorator('email', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'email',\r\n\t\t\t\t\t\t\t\tmessage: 'The Input not valid Email'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: \"Please Input your email\"\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvalidator: this.validateEmail,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input/>)}\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item {...tailFormItemLayout}>\r\n\t\t\t\t\t<Button type={\"primary\"} htmlType={\"submit\"}>\r\n\t\t\t\t\t\tResister\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css'\r\nimport { Tabs, Form } from 'antd';\r\nimport SignIn from './Form/SignIn';\r\nimport SignUp from './Form/SignUp';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nclass TabNavigation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: '1'\r\n    }\r\n  }\r\n\r\n  changeTab = activeKey => {\r\n    this.setState({\r\n      activeTab: activeKey\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    return(\r\n      <Tabs activeKey={this.state.activeTab} onChange={this.changeTab}>\r\n        <TabPane tab=\"SIGN IN\" key=\"1\">\r\n          <SignIn form={this.props.form} view={this.changeTab.bind(this, '2')}/>\r\n        </TabPane>\r\n        <TabPane tab=\"CREATE NEW ACCOUNT\" key=\"2\">\r\n          <SignUp form={this.props.form} view={this.changeTab.bind(this, '1')}/>\r\n        </TabPane>\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(TabNavigation);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport TabNavigation from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<TabNavigation />, document.getElementById('tab'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}